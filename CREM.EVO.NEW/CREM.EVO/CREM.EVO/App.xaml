<Application x:Class="CREM.EVO.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:CREM.EVO"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--Function Button-->
        <Style x:Key="EvoMainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Foreground" Value="#FF1E5D8F"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*"></RowDefinition>
                                <RowDefinition Height="1*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2" Background="{TemplateBinding Background}" Opacity="0.7"></Grid>
                            <Border x:Name="iconpic" Grid.Row="0" Margin="15" Background="{TemplateBinding Button.BorderBrush}" SnapsToDevicePixels="true">
                            </Border>
                            <Border Grid.Row="1" x:Name="Chrome" >
                                <TextBlock Background="Transparent" SnapsToDevicePixels="true" Name="word"  TextAlignment="Center"  Text="{TemplateBinding ContentControl.Content}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="word" Property="Foreground" Value="Silver"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" TargetName="word">
                                    <Setter.Value>
                                        <SolidColorBrush Color="SkyBlue"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--clean start Button-->
        <Style TargetType="Button" x:Key="CleanButtonStyle">
            <Setter Property="Width" Value="160"></Setter>
            <Setter Property="Height" Value="160"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                        <Ellipse Fill="Gray" Name="img">
                                <!--<Ellipse.Effect>
                                    <DropShadowEffect BlurRadius="18" Color="#FF858484" Direction="20" ShadowDepth="1"/>
                                </Ellipse.Effect>-->
                        </Ellipse>
                            <TextBlock Text="{TemplateBinding ContentControl.Content}" Name="img1" Foreground="White" FontSize="32"  TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Fill" Value="#FF1E5D8F" />
                                <Setter TargetName="img1" Property="FontSize" Value="36" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Back Button-->
        <Style TargetType="Button" x:Key="BackButtonStyle">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/back_n.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/back_p.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Save Big Button-->
        <Style TargetType="Button" x:Key="SaveBigButtonStyle">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/save_big_n.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/save_big_p.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--save Button-->
        <Style TargetType="Button" x:Key="SaveButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/save_small_n.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/save_small_p.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--add Button-->
        <Style TargetType="Button" x:Key="AddButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/add_n.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/add_p.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--del Button-->
        <Style TargetType="Button" x:Key="DelButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/Delete_n.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/Delete_p.png" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--remove Button-->
        <Style TargetType="Button" x:Key="RemoveButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/clearcount.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/clearcountdown.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        <!--tabitem-->
        <Style TargetType="{x:Type TabItem}" x:Key="TabStyle">
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Width" Value="240"></Setter>
            <Setter Property="Height" Value="70"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <!-- 主Border -->
                            <Border Name="bd"
                            Background="{TemplateBinding Background}"                         
                            CornerRadius="7,7,0,0"
                           >
                                <ContentPresenter ContentSource="Header"
                                          Margin="10,3" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <!-- 选择后背景 -->
                                <Setter TargetName="bd" Property="Background" Value="#FF2AABE3" />
                                <!-- 选择后Margin设置成0，这样它成了最高的TabItem -->
                                <Setter TargetName="bd" Property="Margin" Value="0" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--selection button-->
        <Style x:Key="ToggleButtonSelectStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Image Name="img" Stretch="Fill" Margin="3" HorizontalAlignment="Center"  VerticalAlignment="Center"/>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Source"  TargetName="img" Value="Skin\ON.png"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Source"  TargetName="img" Value="Skin\OFF.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--listbutton-->
        <Style TargetType="RadioButton" x:Key="ListButtonStyle">
            <Setter Property="Height" Value="70"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="bd" Background="#FF8C8F96" >
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{TemplateBinding ContentControl.Content }"></TextBlock>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bd" Property="Background" Value="#FF4A6D8C"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--home button-->
        <Style TargetType="Button" x:Key="HomeButtonStyle">
            <!--<Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/home.png" Name="img">
                        </Image>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--preview button-->
        <Style TargetType="Button" x:Key="PreviewButtonStyle">
            <Setter Property="Margin" Value="30,0,30,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  BorderThickness="0" CornerRadius="20">
                            <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="Silver" Offset="0"/>
                                        <GradientStop Color="#FF1E5D7F" Offset="1"/>
                                    </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Source="Skin/preview.png" Margin="0,5" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40">
                                </Image>
                                <TextBlock Name="img" Foreground="White" FontSize="28" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top">preview</TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Foreground" Value="gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--add button-->
        <Style TargetType="Button" x:Key="ADDButtonStyle">
            <Setter Property="Margin" Value="30,0,30,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  BorderThickness="0" CornerRadius="20">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="Silver" Offset="0"/>
                                    <GradientStop Color="#FF1E5D7F" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Source="Skin/add.png" Margin="0,5" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40">
                                </Image>
                                <TextBlock Name="img" Foreground="White" FontSize="28" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top">Add</TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Foreground" Value="gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--modify button-->
        <Style TargetType="Button" x:Key="ModifyButtonStyle">
            <Setter Property="Margin" Value="30,0,30,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  BorderThickness="0" CornerRadius="20">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="Silver" Offset="0"/>
                                    <GradientStop Color="#FF1E5D7F" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Source="Skin/modify.png" Margin="0,5" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40">
                                </Image>
                                <TextBlock Name="img" Foreground="White" FontSize="28" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top">Modify</TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Foreground" Value="gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--delete button-->
        <Style TargetType="Button" x:Key="DeleteButtonStyle">
            <Setter Property="Margin" Value="30,0,30,0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border  BorderThickness="0" CornerRadius="20">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="Silver" Offset="0"/>
                                    <GradientStop Color="#FF1E5D7F" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Source="Skin/clearcount.png" Margin="0,5" HorizontalAlignment="Right" VerticalAlignment="Center" Height="40" Width="40">
                                </Image>
                                <TextBlock Name="img" Foreground="White" FontSize="28" Grid.Column="1" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Top">Delete</TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Foreground" Value="gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--return Button-->
        <Style TargetType="Button" x:Key="ReturnButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/return.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <!--<Setter TargetName="img" Property="Source" Value="Skin/save_small_p.png" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--edit Button-->
        <Style TargetType="Button" x:Key="EditButtonStyle">
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Image Source="Skin/modify.png" Name="img">
                        </Image>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="img" Property="Source" Value="Skin/edit_p.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>
        
        <!--Scrollview-->
        <ImageBrush x:Key="imgVerticalScrollBarBackground"
                    TileMode="FlipY"
                    ImageSource="/Images/Window2/VerticalScrollBarBackground.png" />
        <!--滚动条的宽度-->
        <sys:Double x:Key="VerticalScrollBarWidth">24</sys:Double>
        <!--滚动条顶部图片-->
        <ImageSource x:Key="imgVerticalScrollBarTop">/Images/Window2/VerticalScrollBarTop.png</ImageSource>
        <!--滚动条上滚动按钮图片-->
        <ImageSource x:Key="imgVerticalScrollBarUpButton">/Images/Window2/PageUp.png</ImageSource>
        <!--滚动条上滚动按钮点击时图片-->
        <ImageSource x:Key="imgVerticalScrollBarUpButton_S">/Images/Window2/PageUp_S.png</ImageSource>
        <!--上下按钮分割线-->
        <ImageSource x:Key="imgVerticalScrollBarPageSplit">/Images/Window2/PageSplit.png</ImageSource>
        <!--滚动条下滚动按钮图片-->
        <ImageBrush x:Key="imgVerticalScrollBarDownButton"
                    ImageSource="/Images/Window2/PageDown.png" />
        <!--滚动条下滚动按钮点击时图片-->
        <ImageBrush x:Key="imgVerticalScrollBarDownButton_S"
                    ImageSource="/Images/Window2/PageDown_S.png" />


        <ControlTemplate x:Key="ScrollViewerControlTemplate1"
                         TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid"
                  Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>


                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        Grid.Column="0"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Padding}" />

                <ScrollBar x:Name="PART_VerticalScrollBar"
                           Grid.Column="1"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Cursor="Arrow"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Style="{DynamicResource ScrollBarStyle1}" />

            </Grid>
        </ControlTemplate>


        <Style x:Key="RepeatButtonBaseStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle x:Name="bg"
                                   Height="{TemplateBinding Height}"
                                   Width="{TemplateBinding Width}"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="VerticalScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Height="{TemplateBinding Height}"
                                   Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ScrollBarThumb1"
               TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">

                        <Border x:Name="border"
                                CornerRadius="8"
                                BorderThickness="1"
                                Margin="5,-7,5,-9">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#FFAEAEAE"
                                                  Offset="0" />
                                    <GradientStop Color="#FFAEAEAE"
                                                  Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="WhiteSmoke"
                                                  Offset="0" />
                                    <GradientStop Color="#FFDADADA"
                                                  Offset="1" />
                                    <GradientStop Color="#FFE8E8E8"
                                                  Offset="0.645" />
                                </LinearGradientBrush>
                            </Border.Background>

                        </Border>




                        <!--
	 
                        	<Border.BorderBrush>
                        		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        			<GradientStop Color="#FFAEAEAE" Offset="0"/>
                        			<GradientStop Color="#FFAEAEAE" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Border.BorderBrush>
                        	<Border.Background>
                        		<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                        			<GradientStop Color="#FFDDEFFB" Offset="0"/>
                        			<GradientStop Color="#FFBAD9ED" Offset="1"/>
                        		</LinearGradientBrush>
                        	</Border.Background>
                        
                        </Border>
-->

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDragging"
                                     Value="True">
                                <Setter Property="Background"
                                        TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="1,0.5"
                                                             StartPoint="0,0.5">
                                            <GradientStop Color="#FFDDEFFB"
                                                          Offset="0" />
                                            <GradientStop Color="#FFBAD9ED"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




        <Style x:Key="ScrollBarStyle1"
               TargetType="{x:Type ScrollBar}">

            <Setter Property="Stylus.IsPressAndHoldEnabled"
                    Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="false" />

            <Setter Property="Width"
                    Value="{StaticResource VerticalScrollBarWidth}" />
            <Setter Property="MinWidth"
                    Value="{StaticResource VerticalScrollBarWidth}" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="OnMouseLeftButtonDown1">

                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="rpBtnUpImg"
                                                               Storyboard.TargetProperty="(Image.Source)">


                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{StaticResource imgVerticalScrollBarUpButton_S}">


                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>


                            </Storyboard>
                            <Storyboard x:Key="OnPreviewMouseLeftButtonUp1">
                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="rpBtnUpImg"
                                                               Storyboard.TargetProperty="(Image.Source)">

                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{StaticResource imgVerticalScrollBarUpButton}">


                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>


                            <Storyboard x:Key="OnPreviewMouseLeftButtonDown1">
                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="rpBtnDown"
                                                               Storyboard.TargetProperty="(RepeatButton.Background)">

                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{StaticResource imgVerticalScrollBarDownButton_S}">


                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="OnPreviewMouseLeftButtonUp2">
                                <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                               Storyboard.TargetName="rpBtnDown"
                                                               Storyboard.TargetProperty="(RepeatButton.Background)">

                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                            Value="{StaticResource imgVerticalScrollBarDownButton}">


                                    </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>

                        <Grid x:Name="Bg"
                              Background="{TemplateBinding Background}"
                              SnapsToDevicePixels="true">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="20" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition Height="33" />
                                <RowDefinition Height="1" />
                                <RowDefinition Height="23" />
                            </Grid.RowDefinitions>

                            <Image Grid.Row="0"
                                   Source="{StaticResource imgVerticalScrollBarTop}"></Image>

                            <Border Grid.Row="1"
                                    x:Name="bdBackground"
                                    Background="{StaticResource imgVerticalScrollBarBackground}">

                            </Border>



                            <Image Grid.Row="2"
                                   x:Name="rpBtnUpImg"
                                   Source="{StaticResource imgVerticalScrollBarUpButton}"></Image>
                            <RepeatButton Grid.Row="2"
                                          x:Name="rpBtnUp"
                                          Command="{x:Static ScrollBar.LineUpCommand}"
                                          Style="{StaticResource RepeatButtonBaseStyle}"
                                          Background="Transparent"
                                          Height="18"
                                          VerticalAlignment="Bottom" />
                            <Image Grid.Row="3"
                                   Source="{StaticResource imgVerticalScrollBarPageSplit}"></Image>

                            <RepeatButton  Grid.Row="4"
                                           x:Name="rpBtnDown"
                                           Command="{x:Static ScrollBar.LineDownCommand}"
                                           Style="{StaticResource RepeatButtonBaseStyle}"
                                           Background="{DynamicResource imgVerticalScrollBarDownButton}" />

                            <Track x:Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}">

                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                  Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                  Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb1}" />
                                </Track.Thumb>
                            </Track>

                        </Grid>
                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp"
                                          SourceName="rpBtnDown">
                                <BeginStoryboard x:Name="OnPreviewMouseLeftButtonUp2_BeginStoryboard"
                                                 Storyboard="{StaticResource OnPreviewMouseLeftButtonUp2}" />
                            </EventTrigger>

                            <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown"
                                          SourceName="rpBtnDown">
                                <BeginStoryboard x:Name="OnPreviewMouseLeftButtonDown1_BeginStoryboard"
                                                 Storyboard="{StaticResource OnPreviewMouseLeftButtonDown1}" />
                            </EventTrigger>

                            <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp"
                                          SourceName="rpBtnUp">
                                <BeginStoryboard x:Name="OnMouseLeftButtonDown1_BeginStoryboard"
                                                 Storyboard="{StaticResource OnPreviewMouseLeftButtonUp1}" />
                            </EventTrigger>

                            <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown"
                                          SourceName="rpBtnUp">

                                <BeginStoryboard x:Name="OnMouseLeftButtonDown1_BeginStoryboard1"
                                                 Storyboard="{StaticResource OnMouseLeftButtonDown1}" />

                            </EventTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
    </Application.Resources>
</Application>
